//================================================================================
//	Package:		 UnlimaginServer
//––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
//	Class name:		 UnlimaginMutator
//	Parent class:	 Mutator
//––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
//	Copyright:		 © 2012 Tsiryuta G. N. <spbtgn@gmail.com>
//
//	Also some parts of the code with some changes copied from: 
//	Killing Floor Source - Copyright © 2009-2013 Tripwire Interactive, LLC 
//	Unreal Tournament 2004 Source - Copyright © 2004-2013 Epic Games, Inc.
//  ServerPerks by Marco
//––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
//	Creation date:	 07.07.2012 23:34
//––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
//	Comments:		 
//================================================================================
Class UnlimaginMutator extends Mutator
	Config(UnlimaginServer);


//========================================================================
//[block] Variables

var	bool	bInitialized;
var	bool	bInfoGenerated;

struct WeaponInfo
{
	var	Class<KFWeaponPickup>	PickupClass;
	var	byte					CategoryNum;
	var	int						Damage;
	var	float					FireRate;
	var	float					Spread;
	var	bool					bMelee;
	var	float					MeleeRange;
};

struct WeaponMaxPerfs
{
	var	int		MaxDamage;
	var	float	MaxFireRate;
	var	float	MaxSpread;
	var	bool	bMelee;
	var	float	MaxMeleeRange;
};

var		array< WeaponInfo >		WeaponsInfo;
var		array< string >			ModServerPackages;


struct ChatIconType
{
	var() config string IconTexture,IconTag;
	var() config bool bCaseInsensitive;
};
var() globalconfig array<string> Perks,TraderInventory,WeaponCategories,CustomCharacters;
var() globalconfig int MinPerksLevel,MaxPerksLevel,RemotePort,MidGameSaveWaves;
var() globalconfig float RequirementScaling;
var() globalconfig string RemoteDatabaseURL,RemotePassword;
var() globalconfig array<ChatIconType> SmileyTags;

var array<byte> LoadInvCategory;
var array< class<UM_SRVeterancyTypes> > LoadPerks;
var array< class<Pickup> > LoadInventory;
var const int VersionNumber;
var array<PlayerController> PendingPlayers;
var array<UM_StatsObject> ActiveStats;
var localized string ServerPerksGroup;
var transient UM_DatabaseUdpLink Link;
var array<UM_ServerStStats> PendingData;
var KFGameType KFGT;
var int LastSavedWave,WaveCounter;
var UM_SRGameRules RulesMod;
var array<name> AddedServerPackages;
var array<UM_SRHUDKillingFloor.SmileyMessageType> SmileyMsgs;

var() globalconfig bool bForceGivePerk,bNoSavingProgress,bUseRemoteDatabase,bUsePlayerNameAsID,bMessageAnyPlayerLevelUp
			,bUseLowestRequirements,bBWZEDTime,bUseEnhancedScoreboard,bOverrideUnusedCustomStats,bAllowAlwaysPerkChanges
			,bForceCustomChars,bEnableChatIcons,bEnhancedShoulderView;
var bool bEnabledEmoIcons;

//[end] Varibles
//====================================================================

//========================================================================
//[block] Functions

function AddModServerPackages()
{
	// Forcing packages to be downloaded by clients
	for ( i = 0; i < ModServerPackages.Length; i++ )
	{
		if ( ModServerPackages[i] != "" )
			AddToPackageMap(ModServerPackages[i]);
	}
}

function RebalansDefaultClasses()
{
	//[block] Weapon balansing - ToDo: export to normal classes
	//--------------------
	//AA12AutoShotgun
	//------------------
	class'DamTypeAA12Shotgun'.default.WeaponClass = Class'UnlimaginMod.UM_AA12AutoShotgun';
	class'AA12Pickup'.default.InventoryType = Class'UnlimaginMod.UM_AA12AutoShotgun';
	/* class'AA12AutoShotgun'.default.Weight = 8.000000;
	class'AA12AutoShotgun'.default.MagCapacity = 32;
	class'AA12AutoShotgun'.default.FireModeClass[0] = Class'UnlimaginMod.UM_AA12Fire';
	class'AA12AutoShotgun'.default.MessageNoAmmo = "You've squandered all ammo! Ass!";
	*/
	//Ammo
	class'AA12Ammo'.default.MaxAmmo = 128;
	class'AA12Ammo'.default.InitialAmount = 96;
	class'AA12Ammo'.default.AmmoPickupAmount = 32;
	//Pickup
	class'AA12Pickup'.default.Weight = 8.000000;
	class'AA12Pickup'.default.cost = 4000;
	class'AA12Pickup'.default.BuyClipSize = 32;
	class'AA12Pickup'.default.AmmoCost = 40;
	//--------------------
	//GoldenAA12AutoShotgun
	//------------------
	//GoldenAA12Pickup
	class'GoldenAA12Pickup'.default.Weight = 8.000000;
	class'GoldenAA12Pickup'.default.cost = 4200;
	class'GoldenAA12Pickup'.default.BuyClipSize = 32;
	class'GoldenAA12Pickup'.default.AmmoCost = 40;
	class'GoldenAA12Pickup'.default.InventoryType = Class'UnlimaginMod.UM_GoldenAA12AutoShotgun';
	//--------------------
	//AK47AssaultRifle
	//------------------
	//Ammo
	class'AK47Ammo'.default.MaxAmmo = 360;
	class'AK47Ammo'.default.InitialAmount = 240;
	class'AK47Ammo'.default.AmmoPickupAmount = 60;
	//Pickup
	class'AK47Pickup'.default.Weight = 6.000000;
	class'AK47Pickup'.default.cost = 800;
	class'AK47Pickup'.default.BuyClipSize = 30;
	class'AK47Pickup'.default.AmmoCost = 10;
	class'AK47Pickup'.default.InventoryType = Class'UnlimaginMod.UM_AK47AssaultRifle';
	//--------------------
	//AK47AssaultRifle
	//------------------
	class'GoldenAK47AssaultRifle'.default.Weight = 6.000000;
	class'GoldenAK47AssaultRifle'.default.MagCapacity = 30;
	class'GoldenAK47AssaultRifle'.default.FireModeClass[0] = Class'KFMod.AK47Fire';
	//Pickup
	class'GoldenAK47Pickup'.default.InventoryType = Class'UnlimaginMod.UM_GoldenAK47AssaultRifle';
	class'GoldenAK47Pickup'.default.Weight = 6.000000;
	class'GoldenAK47Pickup'.default.cost = 1000;
	class'GoldenAK47Pickup'.default.BuyClipSize = 30;
	class'GoldenAK47Pickup'.default.AmmoCost = 10;
	//--------------------
	//Axe
	//------------------
	class'Axe'.default.Weight = 3.000000;
	//Pickup
	class'AxePickup'.default.Weight = 3.000000;
	//--------------------
	//BenelliShotgun
	//------------------
	class'BenelliShotgun'.default.Weight = 5.000000;
	class'BenelliShotgun'.default.MagCapacity = 6;
	class'BenelliShotgun'.default.ItemName = "M1014 Combat Shotgun";
	class'BenelliShotgun'.default.FireModeClass[0] = Class'UnlimaginMod.UM_BenelliFire';
	class'BenelliShotgun'.default.MessageNoAmmo = "You've squandered all ammo! Ass!";
	class'BenelliShotgun'.default.ReloadRate = 0.750000; //(0.900000 / 1.20)
	class'BenelliShotgun'.default.ReloadAnimRate = 1.200000; //(1.000000 * 1.20)
	//Ammo
	class'BenelliAmmo'.default.MaxAmmo = 60;
	class'BenelliAmmo'.default.InitialAmount = 42;
	class'BenelliAmmo'.default.AmmoPickupAmount = 6;
	//Pickup
	class'BenelliPickup'.default.Weight = 5.000000;
	class'BenelliPickup'.default.cost = 2000;
	class'BenelliPickup'.default.BuyClipSize = 6;
	class'BenelliPickup'.default.AmmoCost = 20;
	class'BenelliPickup'.default.ItemName = "M1014 Combat Shotgun";
	class'BenelliPickup'.default.ItemShortName = "M1014 Combat Shotgun";
	class'BenelliPickup'.default.PickupMessage = "You got the M1014 Combat Shotgun";
	//--------------------
	//GoldenBenelliShotgun
	//------------------
	class'GoldenBenelliShotgun'.default.Weight = 5.000000;
	class'GoldenBenelliShotgun'.default.MagCapacity = 6;
	class'GoldenBenelliShotgun'.default.ItemName = "Gold M1014 Combat Shotgun";
	class'GoldenBenelliShotgun'.default.FireModeClass[0] = Class'UnlimaginMod.UM_BenelliFire';
	class'GoldenBenelliShotgun'.default.MessageNoAmmo = "You've squandered all ammo! Ass!";
	class'GoldenBenelliShotgun'.default.ReloadRate = 0.750000; //(0.900000 / 1.20)
	class'GoldenBenelliShotgun'.default.ReloadAnimRate = 1.200000; //(1.000000 * 1.20)
	//Pickup
	class'GoldenBenelliPickup'.default.Weight = 5.000000;
	class'GoldenBenelliPickup'.default.cost = 2200;
	class'GoldenBenelliPickup'.default.BuyClipSize = 6;
	class'GoldenBenelliPickup'.default.AmmoCost = 20;
	class'GoldenBenelliPickup'.default.ItemName = "Gold M1014 Combat Shotgun";
	class'GoldenBenelliPickup'.default.ItemShortName = "Gold M1014 Combat Shotgun";
	class'GoldenBenelliPickup'.default.PickupMessage = "You got the Gold M1014 Combat Shotgun";
	//--------------------
	//Bullpup
	//------------------
	//Ammo
	class'BullpupAmmo'.default.MaxAmmo = 540;
	class'BullpupAmmo'.default.InitialAmount = 210;
	class'BullpupAmmo'.default.AmmoPickupAmount = 60;
	//Pickup
	class'BullpupPickup'.default.Weight = 5.000000;
	class'BullpupPickup'.default.InventoryType = Class'UnlimaginMod.UM_L22A1Carbine';
	class'BullpupPickup'.default.BuyClipSize = 30;
	class'BullpupPickup'.default.cost = 500;
	class'BullpupPickup'.default.ItemName = "L22A1 (EOTech)";
	class'BullpupPickup'.default.ItemShortName = "L22A1";
	//--------------------
	//BoomStick (HuntingShotgun)
	//------------------
	class'BoomStick'.default.Weight = 4.000000;
	class'BoomStick'.default.MessageNoAmmo = "You've squandered all ammo! Ass!";
	//Ammo
	class'DBShotgunAmmo'.default.MaxAmmo = 48;
	class'DBShotgunAmmo'.default.InitialAmount = 30;
	class'DBShotgunAmmo'.default.AmmoPickupAmount = 4;
	//Pickup
	class'BoomStickPickup'.default.Weight = 4.000000;
	class'BoomStickPickup'.default.cost = 750;
	class'BoomStickPickup'.default.AmmoCost = 15;
	//BoomStickFire
	class'BoomStickFire'.default.ProjectileClass = Class'UnlimaginMod.UM_BoomStickPellet_2Buckshot';
	class'BoomStickFire'.default.ProjPerFire = 15;
	//BoomStickAltFire
	class'BoomStickAltFire'.default.ProjectileClass = Class'UnlimaginMod.UM_BoomStickPellet_2Buckshot';
	class'BoomStickAltFire'.default.ProjPerFire = 15;
	//--------------------
	//ClaymoreSword
	//------------------
	class'ClaymoreSword'.default.Weight = 4.000000;
	//Pickup
	class'ClaymoreSwordPickup'.default.Weight = 4.000000;
	//--------------------
	//Chainsaw
	//------------------
	class'Chainsaw'.default.Weight = 5.000000;
	//Pickup
	class'ChainsawPickup'.default.Weight = 5.000000;
	class'ChainsawPickup'.default.cost = 2700;
	//--------------------
	//GoldenChainsaw
	//------------------
	class'GoldenChainsaw'.default.Weight = 5.000000;
	//Pickup
	class'GoldenChainsawPickup'.default.cost = 2900;
	class'GoldenChainsawPickup'.default.Weight = 5.000000;
	//--------------------
	//Crossbow
	//------------------
	//DamTypeCrossbow
	class'DamTypeCrossbow'.default.WeaponClass = Class'UnlimaginMod.UM_Crossbow';
	//DamTypeCrossbowHeadShot
	class'DamTypeCrossbowHeadShot'.default.WeaponClass = Class'UnlimaginMod.UM_Crossbow';
	//Ammo
	class'CrossbowAmmo'.default.MaxAmmo = 30;
	class'CrossbowAmmo'.default.InitialAmount = 20;
	class'CrossbowAmmo'.default.AmmoPickupAmount = 2;
	//Pickup
	class'CrossbowPickup'.default.InventoryType = Class'UnlimaginMod.UM_Crossbow';
	class'CrossbowPickup'.default.Weight = 6.000000;
	class'CrossbowPickup'.default.cost = 800;
	class'CrossbowPickup'.default.BuyClipSize = 1;
	class'CrossbowPickup'.default.AmmoCost = 18;
	//Fire
	//class'CrossbowFire'.default.ProjectileClass = Class'UnlimaginMod.UM_FragCrossbowArrow';
	class'CrossbowFire'.default.ProjectileClass = Class'UnlimaginMod.UM_CrossbowArrow';
	//--------------------
	//Crossbuzzsaw
	//------------------
	//CrossbuzzsawAmmo
	class'CrossbuzzsawAmmo'.default.MaxAmmo = 20;
	class'CrossbuzzsawAmmo'.default.InitialAmount = 10;
	class'CrossbuzzsawAmmo'.default.AmmoPickupAmount = 5;
	//CrossbuzzsawPickup
	class'CrossbuzzsawPickup'.default.AmmoCost = 50;
	//--------------------
	//Deagle
	//------------------
	class'Deagle'.default.Weight = 2.000000;
	class'Deagle'.default.ItemName = "Desert Eagle";
	class'Deagle'.default.FireModeClass[0] = Class'UnlimaginMod.UM_DeagleFire';
	//Ammo
	class'DeagleAmmo'.default.MaxAmmo = 128;
	class'DeagleAmmo'.default.InitialAmount = 32;
	class'DeagleAmmo'.default.AmmoPickupAmount = 8;
	//Pickup
	class'DeaglePickup'.default.Weight = 2.000000;
	class'DeaglePickup'.default.cost = 500;
	class'DeaglePickup'.default.BuyClipSize = 8;
	class'DeaglePickup'.default.AmmoCost = 15;
	class'DeaglePickup'.default.ItemName = "Desert Eagle";
	class'DeaglePickup'.default.ItemShortName = "Deagle";
	class'DeaglePickup'.default.PickupMessage = "You got the Desert Eagle";
	//--------------------
	//Dual44Magnum
	//------------------
	class'Dual44Magnum'.default.Weight = 4.000000;
	class'Dual44Magnum'.default.ItemName = "Dual S&W Model 29";
	class'Dual44Magnum'.default.FireModeClass[0] = Class'UnlimaginMod.UM_Dual44MagnumFire';
	//Pickup
	class'Dual44MagnumPickup'.default.Weight = 4.000000;
	class'Dual44MagnumPickup'.default.cost = 900;
	class'Dual44MagnumPickup'.default.BuyClipSize = 12;
	class'Dual44MagnumPickup'.default.AmmoCost = 24;
	class'Dual44MagnumPickup'.default.ItemName = "Dual S&W Model 29";
	class'Dual44MagnumPickup'.default.ItemShortName = "Dual S&W M29";
	class'Dual44MagnumPickup'.default.PickupMessage = "You got the Dual S&W Model 29";
	//--------------------
	//DualDeagle
	//------------------
	class'DualDeagle'.default.Weight = 4.000000;
	class'DualDeagle'.default.ItemName = "Dual Desert Eagle";
	class'DualDeagle'.default.FireModeClass[0] = Class'UnlimaginMod.UM_DualDeagleFire';
	//Pickup
	class'DualDeaglePickup'.default.Weight = 4.000000;
	class'DualDeaglePickup'.default.cost = 1000;
	class'DualDeaglePickup'.default.BuyClipSize = 16;
	class'DualDeaglePickup'.default.AmmoCost = 30;
	class'DualDeaglePickup'.default.ItemName = "Dual Desert Eagle";
	class'DualDeaglePickup'.default.ItemShortName = "Dual Deagle";
	class'DualDeaglePickup'.default.PickupMessage = "You got the Dual Desert Eagle";
	//--------------------
	//Dualies
	//------------------
	class'Dualies'.default.MagCapacity = 42;
	class'Dualies'.default.Weight = 2.000000;
	class'Dualies'.default.bKFNeverThrow = False;
	class'Dualies'.default.FireModeClass[0] = Class'UnlimaginMod.UM_DualBeretta93MAFire';
	class'Dualies'.default.ItemName="Dual Beretta 93MA";
	//Ammo
	class'DualiesAmmo'.default.AmmoPickupAmount = 42;
	class'DualiesAmmo'.default.MaxAmmo = 336;
	class'DualiesAmmo'.default.InitialAmount = 210;
	//Pickup
	class'DualiesPickup'.default.Weight = 2.000000;
	class'DualiesPickup'.default.cost = 400;
	class'DualiesPickup'.default.BuyClipSize = 42;
	class'DualiesPickup'.default.ItemName = "Dual Beretta 93MA";
	class'DualiesPickup'.default.ItemShortName = "Dual Beretta 93MA";
	//--------------------
	//DualMK23
	//------------------
	class'DamTypeDualMK23Pistol'.default.WeaponClass = Class'UnlimaginMod.UM_DualMK23Pistol';
	class'DamTypeDualMK23Pistol'.default.HeadShotDamageMult = 1.600000;
	//--------------------
	//FlameThrower
	//------------------
	//DamTypeFlamethrower
	class'DamTypeFlamethrower'.default.WeaponClass = Class'UnlimaginMod.UM_FlameThrower';
	//--------------------
	//DwarfAxe
	//------------------
	//DwarfAxeFireB
	Class'DwarfAxeFireB'.default.bWaitForRelease = False;
	//Ammo
	//class'FlameAmmo'.default.MaxAmmo = 600;
	class'FlameAmmo'.default.InitialAmount = 300;
	class'FlameAmmo'.default.AmmoPickupAmount = 100;
	//Pickup
	class'FlameThrowerPickup'.default.Weight = 9.000000;
	class'FlameThrowerPickup'.default.cost = 750;
	class'FlameThrowerPickup'.default.BuyClipSize = 100;
	class'FlameThrowerPickup'.default.AmmoCost = 30;
	class'FlameThrowerPickup'.default.InventoryType = Class'UnlimaginMod.UM_FlameThrower';
	//--------------------
	//GoldenFlamethrower
	//------------------
	//GoldenFTPickup
	class'GoldenFTPickup'.default.Weight = 9.000000;
	class'GoldenFTPickup'.default.cost = 950;
	class'GoldenFTPickup'.default.BuyClipSize = 100;
	class'GoldenFTPickup'.default.AmmoCost = 30;
	class'GoldenFTPickup'.default.InventoryType = Class'UnlimaginMod.UM_GoldenFlameThrower';
	//--------------------
	//FNFAL_ACOG_AssaultRifle
	//------------------
	class'FNFALAmmo'.default.MaxAmmo = 300;
	//Pickup
	class'FNFAL_ACOG_Pickup'.default.Weight = 6.000000;
	class'FNFAL_ACOG_Pickup'.default.cost = 2600;
	class'FNFAL_ACOG_Pickup'.default.BuyClipSize = 20;
	class'FNFAL_ACOG_Pickup'.default.AmmoCost = 25;
	class'FNFAL_ACOG_Pickup'.default.ItemName = "FN FAL (ACOG)";
	class'FNFAL_ACOG_Pickup'.default.ItemShortName = "FN FAL";
	class'FNFAL_ACOG_Pickup'.default.InventoryType = Class'UnlimaginMod.UM_FNFAL_ACOG_AssaultRifle';
	//--------------------
	//Claws
	//------------------
	Class'Claws'.default.Weight = 0.000000;
	Class'Claws'.default.bKFNeverThrow = True;
	Class'Claws'.default.GroupOffset = 1;
	//--------------------
	//KFHumanPawn
	//------------------
	Class'KFHumanPawn'.default.RequiredEquipment[2] = "UnlimaginMod.UM_Weapon_HandGrenade";
	//Class'KFHumanPawn'.default.RequiredEquipment[5] = "KFMod.Claws";
	//--------------------
	//Frag
	//------------------
	class'DamTypeFrag'.default.WeaponClass = Class'UnlimaginMod.UM_Weapon_HandGrenade';
	class'FragPickup'.default.InventoryType = Class'UnlimaginMod.UM_Weapon_HandGrenade';
	//--------------------
	//HuskGun
	//------------------
	class'HuskGun'.default.FireModeClass[0] = Class'UnlimaginMod.UM_HuskGunFire';
	class'HuskGun'.default.FireModeClass[1] = Class'UnlimaginMod.UM_HuskGunFireB';
	//Ammo
	class'HuskGunAmmo'.default.MaxAmmo = 250;
	class'HuskGunAmmo'.default.InitialAmount = 100;
	//HuskGunProjectile
	class'HuskGunProjectile'.default.Damage = 100;
	//--------------------
	//M14EBRBattleRifle
	//------------------
	//Ammo
	class'M14EBRAmmo'.default.MaxAmmo = 160;
	class'M14EBRAmmo'.default.InitialAmount = 80;
	class'M14EBRAmmo'.default.AmmoPickupAmount = 20;
	//Pickup
	class'M14EBRPickup'.default.Weight = 6.000000;
	class'M14EBRPickup'.default.InventoryType = Class'UnlimaginMod.UM_M14EBR';
	class'M14EBRPickup'.default.cost = 2500;
	class'M14EBRPickup'.default.BuyClipSize = 20;
	class'M14EBRPickup'.default.AmmoCost = 48;
	class'M14EBRPickup'.default.ItemName = "M14 EBR";
	class'M14EBRPickup'.default.ItemShortName = "M14 EBR";
	class'M14EBRPickup'.default.PickupMessage = "You got the M14 EBR";
	//--------------------
	//MAC10MP
	//------------------
	//Ammo
	class'MAC10Ammo'.default.MaxAmmo = 540;
	class'MAC10Ammo'.default.InitialAmount = 300;
	class'MAC10Ammo'.default.AmmoPickupAmount = 60;
	//Pickup
	class'MAC10Pickup'.default.Weight = 4.000000;
	class'MAC10Pickup'.default.InventoryType = Class'UnlimaginMod.UM_MAC10MP';
	class'MAC10Pickup'.default.cost = 500;
	class'MAC10Pickup'.default.BuyClipSize = 30;
	class'MAC10Pickup'.default.AmmoCost = 10;
	//--------------------
	//Machete
	//------------------
	//MacheteFire
	class'MacheteFire'.default.MeleeDamage = 100;
	class'MacheteFire'.default.weaponRange = 80;
	class'MacheteFire'.default.FireRate = 0.600000;
	class'MacheteFire'.default.DamagedelayMin = 0.480000;
	class'MacheteFire'.default.DamagedelayMax = 0.480000;
	//MacheteFireB
	class'MacheteFireB'.default.MeleeDamage = 155;
	class'MacheteFireB'.default.weaponRange = 80;
	class'MacheteFireB'.default.FireRate = 1.000000;
	class'MacheteFireB'.default.DamagedelayMin = 0.640000;
	class'MacheteFireB'.default.DamagedelayMax = 0.640000;
	//--------------------
	//Magnum44Pistol
	//------------------
	class'Magnum44Pistol'.default.Weight = 2.000000;
	class'Magnum44Pistol'.default.ItemName = "S&W Model 29";
	class'Magnum44Pistol'.default.FireModeClass[0] = Class'UnlimaginMod.UM_Magnum44Fire';
	//Ammo
	class'Magnum44Ammo'.default.MaxAmmo = 144;
	class'Magnum44Ammo'.default.InitialAmount = 48;
	class'Magnum44Ammo'.default.AmmoPickupAmount = 6;
	//Pickup
	class'Magnum44Pickup'.default.Weight = 2.000000;
	class'Magnum44Pickup'.default.cost = 450;
	class'Magnum44Pickup'.default.BuyClipSize = 6;
	class'Magnum44Pickup'.default.AmmoCost = 12;
	class'Magnum44Pickup'.default.ItemName = "S&W Model 29";
	class'Magnum44Pickup'.default.ItemShortName = "S&W M29";
	class'Magnum44Pickup'.default.PickupMessage = "You got the S&W Model 29";
	//--------------------
	//MK23Pistol
	//------------------
	class'DamTypeMK23Pistol'.default.WeaponClass = Class'UnlimaginMod.UM_MK23Pistol';
	class'DamTypeMK23Pistol'.default.HeadShotDamageMult = 1.600000;
	//Ammo
	class'MK23Ammo'.default.AmmoPickupAmount = 30;
	class'MK23Ammo'.default.MaxAmmo = 240;
	class'MK23Ammo'.default.InitialAmount = 120;
	//--------------------
	//Katana
	//------------------
	class'Katana'.default.Weight = 2.000000;
	//Pickup
	class'KatanaPickup'.default.Weight = 2.000000;
	//Fire
	class'KatanaFireB'.default.bWaitForRelease = False;
	//--------------------
	//GoldenKatana
	//------------------
	class'GoldenKatana'.default.Weight = 2.000000;
	//Pickup
	class'GoldenKatanaPickup'.default.Weight = 2.000000;
	class'GoldenKatanaPickup'.default.cost = 2200;
	//--------------------
	//Knife
	//------------------
	class'Knife'.default.bKFNeverThrow = False;
	//--------------------
	//KSGShotgun
	//------------------
	//DamTypeKSGShotgun
	class'DamTypeKSGShotgun'.default.WeaponClass = Class'UnlimaginMod.UM_KSGShotgun';
	//Ammo
	//class'KSGAmmo'.default.MaxAmmo = 56;
	//class'KSGAmmo'.default.InitialAmount = 42;
	//KSGPickup
	class'KSGPickup'.default.ItemName = "Kel-Tec KSG-M";
	class'KSGPickup'.default.ItemShortName = "KSG-M";
	class'KSGPickup'.default.BuyClipSize = 14;
	class'KSGPickup'.default.InventoryType = Class'UnlimaginMod.UM_KSGShotgun';
	//--------------------
	//KrissMMedicGun
	//------------------
	//KrissMFire
	//class'KrissMFire'.default.DamageMin = 35;
	class'KrissMFire'.default.DamageMax = 44;
	class'KrissMFire'.default.Spread = 0.012000;
	class'KrissMFire'.default.MaxSpread = 0.060000;
	class'KrissMFire'.default.DamageType = Class'UnlimaginMod.UM_DamTypeKrissM';
	//KrissMAmmo
	class'KrissMAmmo'.default.MaxAmmo = 400;
	class'KrissMAmmo'.default.InitialAmount = 200;
	//--------------------
	//M7A3MMedicGun
	//------------------
	//Fire
	class'M7A3MFire'.default.MaxVerticalRecoilAngle = 400;
	class'M7A3MFire'.default.MaxHorizontalRecoilAngle = 200;
	class'M7A3MFire'.default.DamageMin = 65;
	class'M7A3MFire'.default.DamageMax = 75;
	class'M7A3MFire'.default.DamageType = Class'UnlimaginMod.UM_DamTypeM7A3M';
	class'M7A3MFire'.default.FireRate = 0.120000;
	class'M7A3MFire'.default.Spread = 0.009000;
	class'M7A3MFire'.default.MaxSpread = 0.045000;
	//--------------------
	//M4AssaultRifle
	//------------------
	//Ammo
	class'M4Ammo'.default.MaxAmmo = 540;
	class'M4Ammo'.default.InitialAmount = 240;
	class'M4Ammo'.default.AmmoPickupAmount = 90;
	//M4Attachment
	class'M4Attachment'.default.mTracerClass = None;
	//Pickup
	class'M4Pickup'.default.ItemName = "M4 (Red Dot)";
	class'M4Pickup'.default.ItemShortName = "M4";
	class'M4Pickup'.default.InventoryType = Class'UnlimaginMod.UM_M4AssaultRifle';
	class'M4Pickup'.default.Weight = 4.000000;
	class'M4Pickup'.default.cost = 1000;
	class'M4Pickup'.default.BuyClipSize = 30;
	class'M4Pickup'.default.AmmoCost = 16;
	//--------------------
	//M32GrenadeLauncher
	//------------------
	class'M32GrenadeLauncher'.default.Weight = 6.000000;
	class'M32GrenadeLauncher'.default.FireModeClass[0] = Class'UnlimaginMod.UM_M32Fire';
	class'M32GrenadeLauncher'.default.MessageNoAmmo = "You've squandered all projectiles! Ass!";
	//Ammo
	//class'M32Ammo'.default.MaxAmmo = 36;
	//class'M32Ammo'.default.InitialAmount = 18;
	//class'M32Ammo'.default.AmmoPickupAmount = 6;
	//Pickup
	class'M32Pickup'.default.Weight = 6.000000;
	class'M32Pickup'.default.cost = 2600;
	class'M32Pickup'.default.BuyClipSize = 6;
	class'M32Pickup'.default.AmmoCost = 60;
	//M32GrenadeProjectile
	class'M32GrenadeProjectile'.default.Damage = 330.000000;
	class'M32GrenadeProjectile'.default.DamageRadius = 460.000000;
	class'M32GrenadeProjectile'.default.ImpactDamage = 200;
	//--------------------
	//M79GrenadeLauncher
	//------------------
	class'M79GrenadeLauncher'.default.Weight = 4.000000;
	class'M79GrenadeLauncher'.default.FireModeClass[0] = Class'UnlimaginMod.UM_M79Fire';
	class'M79GrenadeLauncher'.default.MessageNoAmmo = "You've squandered all projectiles! Ass!";
	//Ammo
	//class'M79Ammo'.default.MaxAmmo = 24;
	//class'M79Ammo'.default.InitialAmount = 12;
	//Pickup
	class'M79Pickup'.default.Weight = 4.000000;
	class'M79Pickup'.default.cost = 1200;
	//M79GrenadeProjectile
	class'M79GrenadeProjectile'.default.Damage = 360.000000;
	class'M79GrenadeProjectile'.default.DamageRadius = 410.000000;
	class'M79GrenadeProjectile'.default.ImpactDamage = 240;
	//--------------------
	//GoldenM79GrenadeLauncher
	//------------------
	class'GoldenM79GrenadeLauncher'.default.Weight = 4.000000;
	class'GoldenM79GrenadeLauncher'.default.FireModeClass[0] = Class'UnlimaginMod.UM_M79Fire';
	class'GoldenM79GrenadeLauncher'.default.MessageNoAmmo = "You've squandered all projectiles! Ass!";
	//Pickup
	class'GoldenM79Pickup'.default.Weight = 4.000000;
	class'GoldenM79Pickup'.default.cost = 1400;
	//--------------------
	//M99SniperRifle
	//------------------
	//Pickup
	class'M99Pickup'.default.Weight = 11.000000;
	class'M99Pickup'.default.cost = 4200;
	class'M99Pickup'.default.BuyClipSize = 1;
	class'M99Pickup'.default.AmmoCost = 40;
	class'M99Pickup'.default.InventoryType = Class'UnlimaginMod.UM_M99SniperRifle';
	//Ammo
	class'M99Ammo'.default.MaxAmmo = 25;
	//--------------------
	//M4203AssaultRifle
	//------------------
	//Ammo
	class'M4203Ammo'.default.MaxAmmo = 540;
	class'M203Ammo'.default.MaxAmmo = 10;
	class'M4203Ammo'.default.InitialAmount = 200;
	class'M4203Ammo'.default.AmmoPickupAmount = 30;
	//Pickup
	class'M4203Pickup'.default.Weight = 5.000000;
	class'M4203Pickup'.default.cost = 2000;
	class'M4203Pickup'.default.BuyClipSize = 30;
	class'M4203Pickup'.default.AmmoCost = 10;
	class'M4203Pickup'.default.InventoryType = Class'UnlimaginMod.UM_M4203AssaultRifle';
	//M203GrenadeProjectile
	class'M203GrenadeProjectile'.default.Damage = 350.000000;
	class'M203GrenadeProjectile'.default.DamageRadius = 390.000000;
	class'M203GrenadeProjectile'.default.ImpactDamage = 200;
	//--------------------
	//MKb42AssaultRifle
	//------------------
	class'MKb42Ammo'.default.MaxAmmo = 360;
	class'MKb42Ammo'.default.InitialAmount = 180;
	//MKb42Pickup
	class'MKb42Pickup'.default.cost = 1400;
	class'MKb42Pickup'.default.InventoryType = Class'UnlimaginMod.UM_MKb42AssaultRifle';
	//--------------------
	//MP5MMedicGun
	//------------------
	class'MP5MMedicGun'.default.Weight = 4.000000;
	class'MP5MMedicGun'.default.MagCapacity = 30;
	//Ammo
	class'MP5MAmmo'.default.MaxAmmo = 480;
	class'MP5MAmmo'.default.InitialAmount = 300;
	class'MP5MAmmo'.default.AmmoPickupAmount = 60;
	//Pickup
	class'MP5MPickup'.default.Weight = 4.000000;
	class'MP5MPickup'.default.cost = 4000;
	class'MP5MPickup'.default.BuyClipSize = 30;
	class'MP5MPickup'.default.AmmoCost = 10;
	//Fire
	class'MP5MFire'.default.FireRate = 0.075000;
	class'MP5MFire'.default.Spread = 0.011000;
	class'MP5MFire'.default.MaxSpread = 0.055000;
	class'MP5MFire'.default.DamageMin = 26;
	class'MP5MFire'.default.DamageMax = 35;
	class'MP5MFire'.default.DamageType = Class'UnlimaginMod.UM_DamTypeMP5M';
	class'MP5MFire'.default.maxVerticalRecoilAngle = 110;
	class'MP5MFire'.default.maxHorizontalRecoilAngle = 80;
	//--------------------
	//MP7MMedicGun
	//------------------
	class'MP7MMedicGun'.default.Weight = 3.000000;
	class'MP7MMedicGun'.default.MagCapacity = 40;
	//Ammo
	class'MP7MAmmo'.default.MaxAmmo = 480;
	class'MP7MAmmo'.default.InitialAmount = 320;
	class'MP7MAmmo'.default.AmmoPickupAmount = 80;
	//Pickup
	class'MP7MPickup'.default.Weight = 3.000000;
	class'MP7MPickup'.default.BuyClipSize = 40;
	class'MP7MPickup'.default.AmmoCost = 10;
	//Fire
	class'MP7MFire'.default.Spread = 0.010000;
	class'MP7MFire'.default.MaxSpread = 0.050000;
	class'MP7MFire'.default.DamageMin = 20;
	class'MP7MFire'.default.DamageMax = 30;
	class'MP7MFire'.default.DamageType = Class'UnlimaginMod.UM_DamTypeMP7M';
	class'MP7MFire'.default.maxVerticalRecoilAngle = 80;
	class'MP7MFire'.default.maxHorizontalRecoilAngle = 60;
	//MP7MAltFire
	//class'MP7MAltFire'.default.ProjectileClass = Class'UnlimaginMod.UM_MP7MHealinglProjectile';
	//--------------------
	//NailGun
	//------------------
	class'NailGun'.default.MagCapacity = 7;
	class'NailGun'.default.Weight = 7.000000;
	//NailGunFire
	class'NailGunFire'.default.ProjPerFire = 15;
	class'NailGunFire'.default.Spread = 2500;
	class'NailGunFire'.default.FireRate = 0.400000; // default.FireRate=0.500000
	//NailGunProjectile
	class'NailGunProjectile'.default.Damage = 17.000000;
	class'NailGunProjectile'.default.Bounces = 3;
	class'NailGunProjectile'.default.MaxPenetrations = 2;
	class'NailGunProjectile'.default.PenDamageReduction = 0.630000;
	//NailGunPickup
	class'NailGunPickup'.default.Weight = 7.000000;
	class'NailGunPickup'.default.BuyClipSize = 14;
	//NailGunAmmo
	class'NailGunAmmo'.default.AmmoPickupAmount = 14;
	class'NailGunAmmo'.default.MaxAmmo = 56;
	class'NailGunAmmo'.default.InitialAmount = 35;
	//--------------------
	//PipeBombExplosive
	//------------------
	class'PipeBombExplosive'.default.FireModeClass[0] = Class'UnlimaginMod.UM_PipeBombFire';
	//Ammo
	class'PipeBombAmmo'.default.MaxAmmo = 2;
	//--------------------
	//SCARMK17AssaultRifle
	//------------------
	//Ammo
	class'SCARMK17Ammo'.default.MaxAmmo = 300;
	class'SCARMK17Ammo'.default.InitialAmount = 180;
	//Pickup
	class'SCARMK17Pickup'.default.Weight = 5.000000;
	class'SCARMK17Pickup'.default.InventoryType = Class'UnlimaginMod.UM_SCARMK17AssaultRifle';
	class'SCARMK17Pickup'.default.cost = 3000;
	class'SCARMK17Pickup'.default.BuyClipSize = 20;
	class'SCARMK17Pickup'.default.AmmoCost = 25;
	class'SCARMK17Pickup'.default.ItemName = "SCAR-H (Red Dot, Foregrip)";
	class'SCARMK17Pickup'.default.ItemShortName = "SCAR-H";
	class'SCARMK17Pickup'.default.PickupMessage = "You got the SCAR-H";
	//--------------------
	//Shotgun
	//------------------
	class'Shotgun'.default.Weight = 5.000000;
	class'Shotgun'.default.ItemName = "Remington 870 Shotgun";
	class'Shotgun'.default.FireModeClass[0] = Class'UnlimaginMod.UM_ShotgunFire';
	class'Shotgun'.default.MessageNoAmmo = "You've squandered all ammo! Ass!";
	//Ammo
	class'ShotgunAmmo'.default.MaxAmmo = 64;
	class'ShotgunAmmo'.default.InitialAmount = 40;
	class'ShotgunAmmo'.default.AmmoPickupAmount = 4;
	//Pickup
	class'ShotgunPickup'.default.Weight = 5.000000;
	class'ShotgunPickup'.default.cost = 600;
	class'ShotgunPickup'.default.BuyClipSize = 8;
	class'ShotgunPickup'.default.AmmoCost = 20;
	class'ShotgunPickup'.default.ItemName = "Remington 870 Shotgun";
	class'ShotgunPickup'.default.ItemShortName = "Remington 870";
	class'ShotgunPickup'.default.PickupMessage = "You got the Remington 870 Shotgun";
	//--------------------
	//Single
	//------------------
	class'Single'.default.MagCapacity = 21;
	class'Single'.default.Weight = 1.000000;
	class'Single'.default.bKFNeverThrow = False;
	class'Single'.default.FireModeClass[0] = Class'UnlimaginMod.UM_Beretta93MAFire';
	class'Single'.default.ItemName="Beretta 93MA";
	//Ammo
	class'SingleAmmo'.default.AmmoPickupAmount = 42;
	class'SingleAmmo'.default.MaxAmmo = 336;
	class'SingleAmmo'.default.InitialAmount = 210;
	//Pickup
	class'SinglePickup'.default.Weight = 1.000000;
	class'SinglePickup'.default.cost = 200;
	class'SinglePickup'.default.BuyClipSize = 42;
	class'SinglePickup'.default.ItemName = "Beretta 93MA";
	class'SinglePickup'.default.ItemShortName = "Beretta 93MA";
	//--------------------
	//SPSniperRifle
	//------------------
	//SPSniperPickup
	//--------------------
	class'SPSniperPickup'.default.cost = 1600;
	class'SPSniperPickup'.default.BuyClipSize = 10;
	class'SPSniperPickup'.default.AmmoCost = 25;
	class'SPSniperPickup'.default.InventoryType = Class'UnlimaginMod.UM_SPSniperRifle';
	//Syringe
	//------------------
	class'Syringe'.default.bSpeedMeUp = True;
	//--------------------
	//ThompsonSMG
	//------------------
	//ThompsonAttachment
	class'ThompsonAttachment'.default.mTracerClass = None;
	//ThompsonPickup
	class'ThompsonPickup'.default.ItemName = "Thompson SMG M1A1";
	class'ThompsonPickup'.default.ItemShortName = "Thompson SMG M1A1";
	class'ThompsonPickup'.default.InventoryType = Class'UnlimaginMod.UM_ThompsonSMG';
	//ThompsonAmmo
	class'ThompsonAmmo'.default.MaxAmmo = 540;
	class'ThompsonAmmo'.default.InitialAmount = 300;
	//--------------------
	//ThompsonDrumSMG
	//------------------
	class'ThompsonDrumAmmo'.default.MaxAmmo = 540;
	class'ThompsonDrumAmmo'.default.InitialAmount = 300;
	//ThompsonDrumPickup
	class'ThompsonDrumPickup'.default.ItemName = "Thompson SMG M1928";
	class'ThompsonDrumPickup'.default.Weight = 6.000000;
	class'ThompsonDrumPickup'.default.cost = 1100;
	class'ThompsonDrumPickup'.default.ItemShortName = "Thompson SMG M1928";
	class'ThompsonDrumPickup'.default.Description = "This Tommy gun M1928 with a drum magazine was used heavily during the WWII pacific battles as seen in Rising Storm.";
	class'ThompsonDrumPickup'.default.InventoryType = Class'UnlimaginMod.UM_ThompsonM1928SMG';
	//--------------------
	//SPThompsonSMG
	//------------------
	class'SPThompsonAmmo'.default.MaxAmmo = 540;
	class'SPThompsonAmmo'.default.InitialAmount = 300;
	//SPThompsonPickup
	class'SPThompsonPickup'.default.Weight = 6.000000;
	class'SPThompsonPickup'.default.cost = 1200;
	class'SPThompsonPickup'.default.InventoryType = Class'UnlimaginMod.UM_SteampunkThompsonM1928SMG';
	//--------------------
	//Trenchgun
	//------------------
	class'Trenchgun'.default.Weight = 6.000000;
	class'Trenchgun'.default.ItemName = "Winchester Model 1897";
	class'Trenchgun'.default.FireModeClass[0] = Class'UnlimaginMod.UM_TrenchgunFire';
	//TrenchgunAmmo
	class'TrenchgunAmmo'.default.AmmoPickupAmount = 6;
	class'TrenchgunAmmo'.default.MaxAmmo = 60;
	class'TrenchgunAmmo'.default.InitialAmount = 30;
	//TrenchgunPickup
	class'TrenchgunPickup'.default.Weight = 6.000000;
	class'TrenchgunPickup'.default.ItemName = "Winchester Model 1897";
	class'TrenchgunPickup'.default.ItemShortName = "Winchester M1897";
	//--------------------
	//LAW
	//------------------
	class'LAW'.default.Weight = 8.000000;
	class'LAW'.default.FireModeClass[0] = Class'UnlimaginMod.UM_LAWFire';
	class'LAW'.default.MessageNoAmmo = "You've squandered all projectiles! Ass!";
	//Ammo
	//class'LAWAmmo'.default.MaxAmmo = 10;
	//class'LAWAmmo'.default.InitialAmount = 10;
	//class'LAWAmmo'.default.AmmoPickupAmount = 2;
	//Pickup
	class'LAWPickup'.default.Weight = 8.000000;
	class'LAWPickup'.default.cost = 3200;
	class'LAWPickup'.default.BuyClipSize = 1;
	class'LAWPickup'.default.AmmoCost = 40;
	//LAWProj
	class'LAWProj'.default.Damage = 950.000000;
	class'LAWProj'.default.DamageRadius = 500.000000;
	class'LAWProj'.default.ImpactDamage = 300;
	//--------------------
	//Winchester
	//------------------
	//Ammo
	class'WinchesterAmmo'.default.MaxAmmo = 112;
	class'WinchesterAmmo'.default.InitialAmount = 42;
	//Pickup
	class'WinchesterPickup'.default.cost = 500;
	class'WinchesterPickup'.default.AmmoCost = 24;
	class'WinchesterPickup'.default.BuyClipSize = 14;
	class'WinchesterPickup'.default.Weight = 5.000000;
	class'WinchesterPickup'.default.ItemName = "Winchester Model 1894";
	class'WinchesterPickup'.default.ItemShortName = "Winchester M1894";
	class'WinchesterPickup'.default.PickupMessage = "You got the Winchester Model 1894";
	class'WinchesterPickup'.default.InventoryType = Class'UnlimaginMod.UM_WinchesterM1894Rifle';
	//-------------------
	//ZEDGun
	//-----------------
	//ZEDGunProjectile
	class'ZEDGunProjectile'.default.Damage = 100;
	//[end]
	
	class'KFLevelRules'.default.ItemForSale[12] = Class'UnlimaginMod.UM_MK23Pickup';
    class'KFLevelRules'.default.ItemForSale[13] = Class'UnlimaginMod.UM_DualMK23Pickup';
}

function GenerateWeaponsInfo()
{
	local	array< WeaponMaxPerfs >		WeaponsMaxs;
	local	Class<KFShotgunFire>		KFShotgunFireClass;
	local	Class<KFFire>				KFFireClass;
	local	Class<KFMeleeFire>			KFMeleeFireClass;
	local	Class<Projectile>			ProjClass;
	local	int							i;
	
	if ( WeaponsInfo.Length < 1 )
		Return;
	
	//[block] WeaponPickup PowerValue, SpeedValue and RangeValue AutoGenerator
	if ( !bInfoGenerated ) {
		//Filling Damage, FireRate and Spread_Or_MeleeRange vars in WeaponsInfo
		for ( i = 0; i < WeaponsInfo.Length; i++ ) {
			//filling WeaponsInfo elements
			if ( WeaponsInfo[i].PickupClass != None ) {
				KFShotgunFireClass = Class<KFShotgunFire>(Class<KFWeapon>(WeaponsInfo[i].PickupClass.default.InventoryType).default.FireModeClass[0]);
				KFFireClass = Class<KFFire>(Class<KFWeapon>(WeaponsInfo[i].PickupClass.default.InventoryType).default.FireModeClass[0]);
				KFMeleeFireClass = Class<KFMeleeFire>(Class<KFWeapon>(WeaponsInfo[i].PickupClass.default.InventoryType).default.FireModeClass[0]);
				if ( KFShotgunFireClass != None ) {
					//finding out ProjectileClass
					ProjClass = KFShotgunFireClass.default.ProjectileClass;
					//assign weapon Damage
					WeaponsInfo[i].Damage = KFShotgunFireClass.default.ProjPerFire * ProjClass.default.Damage;
					//assign weapon FireRate
					WeaponsInfo[i].FireRate = KFShotgunFireClass.default.FireRate;
					//assign weapon Range (Spread)
					WeaponsInfo[i].Spread_Or_MeleeRange = KFShotgunFireClass.default.Spread;
				}
				else if ( KFFireClass != None ) {
					//assign weapon Damage (DamageMin and DamageMax arithmetic average)
					WeaponsInfo[i].Damage = (KFFireClass.default.DamageMin + KFFireClass.default.DamageMax) / 2;
					//assign weapon FireRate
					WeaponsInfo[i].FireRate = KFFireClass.default.FireRate;
					//assign weapon Range (Spread and MaxSpread arithmetic average)
					WeaponsInfo[i].Spread_Or_MeleeRange = (KFFireClass.default.Spread + KFFireClass.default.MaxSpread) / 2;
				}
				else if ( KFMeleeFireClass != None ) {
					//assign weapon Damage
					WeaponsInfo[i].Damage = KFMeleeFireClass.default.MeleeDamage;
					//assign weapon FireRate
					WeaponsInfo[i].FireRate = KFMeleeFireClass.default.FireRate;
					//assign weapon Range (Melee)
					WeaponsInfo[i].Spread_Or_MeleeRange = KFMeleeFireClass.default.weaponRange;
					//It is a Melee weapon
					WeaponsInfo[i].bMelee = True;
				}
			}
		}
		
		for ( i = 0; i < WeaponsInfo.Length; i++ ) {
			// Melle weapons allways will be in 0 index in WeaponsMaxs array
			if ( WeaponsInfo[i].PickupClass != None && WeaponsInfo[i].bMelee ) {
				WeaponsMaxs[0].bMelee = True;
				Break;
			}
		}
		
		// Set the initial values
		for ( i = 0; i < WeaponCategories.Length; i++ ) {
			WeaponsMaxs[i].FireRate = 1000.0;
			if ( !WeaponsMaxs[i].bMelee )
				WeaponsMaxs[i].MaxSpread_Or_MeleeRange = 100000.0;
		}
		
		//Finding out weapons MaxDamage, MaxFireRate and MaxSpread_Or_MeleeRange
		for ( i = 0; i < WeaponsInfo.Length; i++ ) {
			if ( WeaponsInfo[i].PickupClass != None ) {
				//MaxDamage
				if ( WeaponsMaxs[WeaponsInfo[i].Cat].MaxDamage < WeaponsInfo[i].Damage )
					WeaponsMaxs[WeaponsInfo[i].Cat].MaxDamage = WeaponsInfo[i].Damage;
				
				//MaxFireRate
				if ( WeaponsMaxs[WeaponsInfo[i].Cat].MaxFireRate > WeaponsInfo[i].FireRate )
					WeaponsMaxs[WeaponsInfo[i].Cat].MaxFireRate = WeaponsInfo[i].FireRate;
				
				//MaxSpread_Or_MeleeRange
				if ( (WeaponsMaxs[WeaponsInfo[i].Cat].bMelee && 
					 WeaponsMaxs[WeaponsInfo[i].Cat].MaxSpread_Or_MeleeRange < WeaponsInfo[i].Spread_Or_MeleeRange) || 
					 WeaponsMaxs[WeaponsInfo[i].Cat].MaxSpread_Or_MeleeRange > WeaponsInfo[i].Spread_Or_MeleeRange )
					WeaponsMaxs[WeaponsInfo[i].Cat].MaxSpread_Or_MeleeRange = WeaponsInfo[i].Spread_Or_MeleeRange;
			}
		}
		
		//Assign PickupClasses PowerValue, SpeedValue and RangeValue
		for ( i = 0; i < WeaponsInfo.Length; i++ ) {
			if ( WeaponsInfo[i].PickupClass != None ) {
				//PowerValue
				if ( WeaponsInfo[i].Damage >= WeaponsMaxs[WeaponsInfo[i].Cat].MaxDamage )
					WeaponsInfo[i].PickupClass.default.PowerValue = 100;
				else
					WeaponsInfo[i].PickupClass.default.PowerValue = int(WeaponsInfo[i].Damage / WeaponsMaxs[WeaponsInfo[i].Cat].MaxDamage * 100.0);
				
				//SpeedValue
				if ( WeaponsInfo[i].FireRate <= WeaponsMaxs[WeaponsInfo[i].Cat].MaxFireRate )
					WeaponsInfo[i].PickupClass.default.SpeedValue = 100;
				else
					WeaponsInfo[i].PickupClass.default.SpeedValue = int(WeaponsMaxs[WeaponsInfo[i].Cat].MaxFireRate / WeaponsInfo[i].FireRate * 100.0);
				
				//RangeValue
				if ( WeaponsInfo[i].bMelee ) {
					if ( WeaponsInfo[i].Spread_Or_MeleeRange >= WeaponsMaxs[WeaponsInfo[i].Cat].MaxSpread_Or_MeleeRange )
						WeaponsInfo[i].PickupClass.default.RangeValue = 100;
					else
						WeaponsInfo[i].PickupClass.default.RangeValue = int(WeaponsInfo[i].Spread_Or_MeleeRange / WeaponsMaxs[WeaponsInfo[i].Cat].MaxSpread_Or_MeleeRange * 100.0);
				}
				else {
					if ( WeaponsInfo[i].Spread_Or_MeleeRange <= WeaponsMaxs[WeaponsInfo[i].Cat].MaxSpread_Or_MeleeRange )
						WeaponsInfo[i].PickupClass.default.RangeValue = 100;
					else
						WeaponsInfo[i].PickupClass.default.RangeValue = int(WeaponsMaxs[WeaponsInfo[i].Cat].MaxSpread_Or_MeleeRange / WeaponsInfo[i].Spread_Or_MeleeRange * 100.0);
				}
			}
		}
			
		bInfoGenerated = True;
	}
	//[end]
}

function PostBeginPlay()
{
	local int i,j;
	local class<UM_SRVeterancyTypes> V;
	local class<Pickup> P;
	local string S;
	local byte Cat;
	local class<PlayerRecordClass> PR;
	local Object O;
	local Texture T;

	if ( bInitialized )
		Return;
	
	bInitialized = True;
	
	AddModServerPackages();
	RebalansDefaultClasses();
	
	//[block] ToDO: îòïèëèòü âñå ýòî, èáî âñå ýòî áóäåò ïîäêëþ÷àòüñÿ ÷åðåç ìîé UnlimaginGameType
	if( RulesMod==None )
		RulesMod = Spawn(Class'UM_SRGameRules');

	KFGT = KFGameType(Level.Game);
	if( Level.Game.HUDType~=Class'KFGameType'.Default.HUDType )
	{
		bEnabledEmoIcons = bEnableChatIcons;
		Level.Game.HUDType = string(Class'UM_SRHUDKillingFloor');
	}

	if( bUseEnhancedScoreboard && Level.Game.ScoreBoardType~=Class'KFGameType'.Default.ScoreBoardType )
		Level.Game.ScoreBoardType = string(Class'UM_SRScoreBoard');

	// Use own playercontroller class for security reasons.
	if( Level.Game.PlayerControllerClass==Class'KFPlayerController' )
	{
		Level.Game.PlayerControllerClass = Class'UM_SRPlayerController';
		Level.Game.PlayerControllerClassName = string(Class'UM_SRPlayerController');
	}
	DeathMatch(Level.Game).LoginMenuClass = string(Class'UM_SRInvasionLoginMenu');
	//[end]

	// Load perks.
	for( i=0; i<Perks.Length; i++ )
	{
		V = class<UM_SRVeterancyTypes>(DynamicLoadObject(Perks[i],Class'Class'));
		if( V!=None )
		{
			LoadPerks[LoadPerks.Length] = V;
			ImplementPackage(V.Outer.Name);
		}
	}
	if( WeaponCategories.Length==0 )
	{
		WeaponCategories.Length = 1;
		WeaponCategories[0] = "All";
	}

	// Load up trader inventory.
	for( i=0; i<TraderInventory.Length; i++ )
	{
		S = TraderInventory[i];
		j = InStr(S,":");
		
		if ( j > 0 ) {
			Cat = Min(int(Left(S,j)),WeaponCategories.Length - 1);
			S = Mid(S,j+1);
		}
		else 
			Cat = 0;
		
		P = class<Pickup>(DynamicLoadObject(S,Class'Class'));
		if ( P != None ) {
			LoadInventory[LoadInventory.Length] = P;
			LoadInvCategory[LoadInvCategory.Length] = Cat;
			if( P.Outer.Name!='KFMod' )
				ImplementPackage(P.Outer.Name);
		
			WeaponsInfo[i].PickupClass = Class<KFWeaponPickup>(P);
			WeaponsInfo[i].CategoryNum = Cat;
		}
	}
	
	GenerateWeaponsInfo();

	// Load custom chars.
	for( i=0; i<CustomCharacters.Length; ++i )
	{
		// Separate group from actual skin.
		S = CustomCharacters[i];
		j = InStr(S,":");
		if( j>=0 )
			S = Mid(S,j+1);
		PR = class<PlayerRecordClass>(DynamicLoadObject(S$"Mod."$S,class'Class',true));
		if( PR!=None )
		{
			if( PR.Default.MeshName!="" ) // Add mesh package.
			{
				O = DynamicLoadObject(PR.Default.MeshName,class'Mesh',true);
				while( O!=None && O.Outer!=None )
					O = O.Outer;
				if( O!=None )
					ImplementPackage(O.Name);
			}
			if( PR.Default.BodySkinName!="" ) // Add skin package.
			{
				O = DynamicLoadObject(PR.Default.BodySkinName,class'Material',true);
				while( O!=None && O.Outer!=None )
					O = O.Outer;
				if( O!=None )
					ImplementPackage(O.Name);
			}
			ImplementPackage(PR.Outer.Name);
		}
	}
	
	// Load chat icons
	if( bEnabledEmoIcons )
	{
		j = 0;
		for( i=0; i<SmileyTags.Length; ++i )
		{
			if( SmileyTags[i].IconTexture=="" || SmileyTags[i].IconTag=="" )
				continue;
			T = Texture(DynamicLoadObject(SmileyTags[i].IconTexture,class'Texture',true));
			if( T==None )
				continue;
			ImplementPackage(T.Outer.Name);
			SmileyMsgs.Length = j+1;
			SmileyMsgs[j].SmileyTex = T;
			if( SmileyTags[i].bCaseInsensitive )
				SmileyMsgs[j].SmileyTag = Caps(SmileyTags[i].IconTag);
			else SmileyMsgs[j].SmileyTag = SmileyTags[i].IconTag;
			SmileyMsgs[j].bInCAPS = SmileyTags[i].bCaseInsensitive;
			++j;
		}
		bEnabledEmoIcons = (j!=0);
	}

	Log("Adding"@AddedServerPackages.Length@"additional serverpackages",Class.Outer.Name);
	for( i=0; i<AddedServerPackages.Length; i++ )
		AddToPackageMap(string(AddedServerPackages[i]));

	if( bUseRemoteDatabase )
	{
		Log("Using remote database:"@RemoteDatabaseURL$":"$RemotePort,Class.Outer.Name);
		Link = Spawn(Class'UM_DatabaseUdpLink');
		Link.Mut = Self;
	}
}

final function ImplementPackage( name N )
{
	local int i;
	
	for( i=(AddedServerPackages.Length-1); i>=0; --i )
		if( AddedServerPackages[i]==N )
			return;
	AddedServerPackages[AddedServerPackages.Length] = N;
}

function bool CheckReplacement(Actor Other, out byte bSuperRelevant)
{
	if( PlayerController(Other)!=None )
	{
		PendingPlayers[PendingPlayers.Length] = PlayerController(Other);
		SetTimer(0.1,false);
	}
	else if( UM_ServerStStats(Other)!=None )
		SetServerPerks(UM_ServerStStats(Other));
	else if( UM_SRClientPerkRepLink(Other)!=None )
		SetupRepLink(UM_SRClientPerkRepLink(Other));

	return true;
}
final function SetServerPerks( UM_ServerStStats Stat )
{
	local int i;

	Stat.MutatorOwner = Self;
	Stat.Rep.MinimumLevel = MinPerksLevel+1;
	Stat.Rep.MaximumLevel = MaxPerksLevel+1;
	Stat.Rep.RequirementScaling = RequirementScaling;
	Stat.Rep.CachePerks.Length = LoadPerks.Length;
	for( i=0; i<LoadPerks.Length; i++ )
		Stat.Rep.CachePerks[i].PerkClass = LoadPerks[i];
}
final function SetupRepLink( UM_SRClientPerkRepLink R )
{
	local int i;

	R.bMinimalRequirements = bUseLowestRequirements;
	R.bBWZEDTime = bBWZEDTime;
	R.bNoStandardChars = bForceCustomChars;

	R.ShopInventory.Length = LoadInventory.Length;
	for( i=0; i<LoadInventory.Length; ++i )
	{
		R.ShopInventory[i].PC = LoadInventory[i];
		R.ShopInventory[i].CatNum = LoadInvCategory[i];
	}
	R.ShopCategories = WeaponCategories;
	R.CustomChars = CustomCharacters;
	if( bEnabledEmoIcons )
		R.SmileyTags = SmileyMsgs;
}

function GetServerDetails( out GameInfo.ServerResponseLine ServerState )
{
	local int i,l;

	Super.GetServerDetails( ServerState );
	l = ServerState.ServerInfo.Length;
	ServerState.ServerInfo.Length = l+1;
	ServerState.ServerInfo[l].Key = "Veterancy Handler";
	ServerState.ServerInfo[l].Value = "Ver"@VersionNumber;
	l++;
	ServerState.ServerInfo.Length = l+1;
	ServerState.ServerInfo[l].Key = "Veterancy saving";
	ServerState.ServerInfo[l].Value = Eval(bNoSavingProgress,"Disabled","Enabled");
	l++;
	ServerState.ServerInfo.Length = l+1;
	ServerState.ServerInfo[l].Key = "Min perk level";
	ServerState.ServerInfo[l].Value = string(MinPerksLevel);
	l++;
	ServerState.ServerInfo.Length = l+1;
	ServerState.ServerInfo[l].Key = "Max perk level";
	ServerState.ServerInfo[l].Value = string(MaxPerksLevel);
	l++;
	ServerState.ServerInfo.Length = l+1;
	ServerState.ServerInfo[l].Key = "Num trader weapons";
	ServerState.ServerInfo[l].Value = string(LoadInventory.Length);
	l++;
	For( i=0; i<LoadPerks.Length; i++ )
	{
		ServerState.ServerInfo.Length = l+1;
		ServerState.ServerInfo[l].Key = "Veterancy";
		ServerState.ServerInfo[l].Value = LoadPerks[i].Default.VeterancyName;
		l++;
	}
}
function Timer()
{
	local int i;
	
	for( i=(PendingPlayers.Length-1); i>=0; --i )
	{
		if( UM_SRPlayerController(PendingPlayers[i])!=None )
			UM_SRPlayerController(PendingPlayers[i]).bUseAdvBehindview = bEnhancedShoulderView;
		if( PendingPlayers[i]!=None && PendingPlayers[i].Player!=None && UM_ServerStStats(PendingPlayers[i].SteamStatsAndAchievements)==None )
		{
			if( PendingPlayers[i].SteamStatsAndAchievements!=None )
				PendingPlayers[i].SteamStatsAndAchievements.Destroy();
			PendingPlayers[i].SteamStatsAndAchievements = Spawn(Class'UM_ServerStStats',PendingPlayers[0]);
		}
	}
	PendingPlayers.Length = 0;
}

static final function string GetPlayerID( PlayerController PC )
{
	if( Default.bUsePlayerNameAsID )
		return PC.PlayerReplicationInfo.PlayerName;
	return PC.GetPlayerIDHash();
}
final function UM_StatsObject GetStatsForPlayer( PlayerController PC )
{
	local UM_StatsObject S;
	local string SId;
	local int i;

	if( bNoSavingProgress || Level.Game.bGameEnded )
		return None;
	SId = GetPlayerID(PC);
	for( i=0; i<ActiveStats.Length; ++i )
		if( string(ActiveStats[i].Name)~=SId )
		{
			S = ActiveStats[i];
			break;
		}
	if( S==None )
	{
		S = new(None,SId) Class'UM_StatsObject';
		ActiveStats[ActiveStats.Length] = S;
	}
	S.PlayerName = PC.PlayerReplicationInfo.PlayerName;
	S.PlayerIP = PC.GetPlayerNetworkAddress();
	return S;
}

final function SaveStats()
{
	local int i;
	local UM_SRClientPerkRepLink CP;

	Log("*** Saving"@ActiveStats.Length@"stats objects ***",Class.Outer.Name);
	foreach DynamicActors(Class'UM_SRClientPerkRepLink',CP)
		if( CP.StatObject!=None && UM_ServerStStats(CP.StatObject).MyStatsObject!=None )
			UM_ServerStStats(CP.StatObject).MyStatsObject.SetCustomValues(CP.CustomLink);

	if( bUseRemoteDatabase )
	{
		if( Link!=None )
			Link.SaveStats();
		return;
	}
	for( i=0; i<ActiveStats.Length; ++i )
		if( ActiveStats[i].bStatsChanged )
		{
			ActiveStats[i].bStatsChanged = false;
			ActiveStats[i].SaveConfig();
		}
}
final function CheckWinOrLose()
{
	local bool bWin;
	local Controller P;
	local PlayerController Player;

	bWin = (KFGameReplicationInfo(Level.GRI)!=None && KFGameReplicationInfo(Level.GRI).EndGameType==2);
	for ( P = Level.ControllerList; P != none; P = P.nextController )
	{
		Player = PlayerController(P);

		if ( Player != none )
		{
			if ( UM_ServerStStats(Player.SteamStatsAndAchievements)!=None )
				UM_ServerStStats(Player.SteamStatsAndAchievements).WonLostGame(bWin);
		}
	}
}
final function InitNextWave()
{
	if( ++WaveCounter>=MidGameSaveWaves )
	{
		WaveCounter = 0;
		SaveStats();
	}
}

Auto state EndGameTracker
{
Begin:
	while( !Level.Game.bGameEnded )
	{
		Sleep(1.f);
		if( MidGameSaveWaves>0 && KFGT!=None && KFGT.WaveNum!=LastSavedWave )
		{
			LastSavedWave = KFGT.WaveNum;
			InitNextWave();
		}
	}
	CheckWinOrLose();
	SaveStats();
}

final function ReceivedPlayerID( string S )
{
	local int i,RID;

	i = InStr(S,"|");
	RID = int(Left(S,i));
	S = Mid(S,i+1);

	for( i=0; i<PendingData.Length; ++i )
	{
		if( PendingData[i]==None )
			PendingData.Remove(i--,1);
		else if( S~=string(PendingData[i].MyStatsObject.Name) )
		{
			PendingData[i].SetID(RID);
			break;
		}
	}
}
final function ReceivedPlayerData( string S )
{
	local int i,RID;

	i = InStr(S,"|");
	RID = int(Left(S,i));
	S = Mid(S,i+1);

	for( i=0; i<PendingData.Length; ++i )
	{
		if( PendingData[i]==None )
			PendingData.Remove(i--,1);
		else if( RID==PendingData[i].GetID() )
		{
			PendingData[i].GetData(S);
			PendingData.Remove(i,1);
			break;
		}
	}
}
final function string GetSafeName( string S )
{
	ReplaceText(S,"=","-");
	ReplaceText(S,Chr(10),""); // LF
	ReplaceText(S,Chr(13),""); // CR
	ReplaceText(S,Chr(34),"'"); // "
	return S;
}
final function GetRemoteStatsForPlayer( UM_ServerStStats Other )
{
	local int i;

	if( Link==None || !Link.bConnectionReady )
		return;
	Link.SendText(Link.A,Chr(Link.ENetID.ID_NewPlayer)$Other.MyStatsObject.Name$"*"$GetSafeName(Other.PlayerOwner.PlayerReplicationInfo.PlayerName));
	for( i=0; i<PendingData.Length; ++i )
		if( PendingData[i]==Other )
			return;
	PendingData[PendingData.Length] = Other;
}

//[end] Functions
//====================================================================

static function FillPlayInfo(PlayInfo PlayInfo)
{
	Super.FillPlayInfo(PlayInfo);

	PlayInfo.AddSetting(default.ServerPerksGroup,"Perks","Perk Classes",1,1,"Text","42",,,True);
	PlayInfo.AddSetting(default.ServerPerksGroup,"CustomCharacters","Custom chars",1,1,"Text","42",,,True);
	PlayInfo.AddSetting(default.ServerPerksGroup,"TraderInventory","Trader Weapons",1,1,"Text","42",,,True);
	PlayInfo.AddSetting(default.ServerPerksGroup,"WeaponCategories","Weapon categories",1,1,"Text","42",,,True);
	PlayInfo.AddSetting(default.ServerPerksGroup,"MinPerksLevel","Min Perk Level",1,0, "Text", "4;-1:254",,,True);
	PlayInfo.AddSetting(default.ServerPerksGroup,"MaxPerksLevel","Max Perk Level",1,0, "Text", "4;0:254",,,True);
	PlayInfo.AddSetting(default.ServerPerksGroup,"RequirementScaling","Req Scaling",1,0, "Text", "6;0.01:4.00",,,True);
	PlayInfo.AddSetting(default.ServerPerksGroup,"bForceGivePerk","Force perks",1,0, "Check");
	PlayInfo.AddSetting(default.ServerPerksGroup,"bNoSavingProgress","No saving",1,0, "Check");
	PlayInfo.AddSetting(default.ServerPerksGroup,"bAllowAlwaysPerkChanges","Unlimited perk changes",1,0, "Check");
	PlayInfo.AddSetting(default.ServerPerksGroup,"bUseRemoteDatabase","Use remote database",1,0, "Check");
	PlayInfo.AddSetting(default.ServerPerksGroup,"RemoteDatabaseURL","Remote database URL",1,1,"Text","64",,,True);
	PlayInfo.AddSetting(default.ServerPerksGroup,"RemotePort","Remote database port",1,0, "Text", "5;0:65535",,,True);
	PlayInfo.AddSetting(default.ServerPerksGroup,"RemotePassword","Remote database password",1,0, "Text", "64",,,True);
	PlayInfo.AddSetting(default.ServerPerksGroup,"MidGameSaveWaves","MidGame Save Waves",1,0, "Text", "5;0:10",,,True);

	PlayInfo.AddSetting(default.ServerPerksGroup,"bUsePlayerNameAsID","Use PlayerName as ID",1,0, "Check");
	PlayInfo.AddSetting(default.ServerPerksGroup,"bMessageAnyPlayerLevelUp","Notify any levelup",1,0, "Check");
	PlayInfo.AddSetting(default.ServerPerksGroup,"bUseLowestRequirements","Use lowest req",1,0, "Check");
	PlayInfo.AddSetting(default.ServerPerksGroup,"bBWZEDTime","BW ZED-time",1,0, "Check");
	PlayInfo.AddSetting(default.ServerPerksGroup,"bUseEnhancedScoreboard","Enhanced scoreboard",1,0, "Check");
	PlayInfo.AddSetting(default.ServerPerksGroup,"bForceCustomChars","Force Custom Chars",1,0, "Check");
	PlayInfo.AddSetting(default.ServerPerksGroup,"bEnableChatIcons","Enable chat icons",1,0, "Check");
	PlayInfo.AddSetting(default.ServerPerksGroup,"bEnhancedShoulderView","Shoulder view",1,0, "Check");
}

static event string GetDescriptionText(string PropName)
{
	switch (PropName)
	{
		case "Perks":			return "Perk classes.";
		case "CustomCharacters":	return "Custom mod characters.";
		case "MinPerksLevel":		return "Minimum perk level players can have.";
		case "MaxPerksLevel":		return "Maximum perk level players can have.";
		case "RequirementScaling":	return "Perk requirements scaling.";
		case "bForceGivePerk":		return "Force all players to get at least a random perk if they have none selected.";
		case "bNoSavingProgress":	return "Server shouldn't save perk progression.";
		case "bUseRemoteDatabase":	return "Instead of storing perk data locally on server, use remote data storeage server.";
		case "RemoteDatabaseURL":	return "URL of the remote database.";
		case "RemotePort":		return "Port of the remote database.";
		case "RemotePassword":		return "Password for server to access the remote database.";
		case "MidGameSaveWaves":	return "Between how many waves should it mid-game save stats.";
		case "TraderInventory":		return "Trader inventory classes list";
		case "bUsePlayerNameAsID":	return "Use PlayerName's as ID instead of ID Hash.";
		case "bMessageAnyPlayerLevelUp": return "Broadcast a global message anytime someone gains a perk upgrade.";
		case "bUseLowestRequirements":	return "Use lowest form of requirements for perks.";
		case "bBWZEDTime":		return "Make screen go black and white during ZED-time.";
		case "WeaponCategories":	return "Weapon category names.";
		case "bUseEnhancedScoreboard":	return "Should use serverperk's own scoreboard.";
		case "bAllowAlwaysPerkChanges":	return "Allow unlimited perk changes.";
		case "bForceCustomChars":	return "Force players to use specified custom characters.";
		case "bEnableChatIcons":	return "Should enable chat icons to replace specific tags in chat.";
		case "bEnhancedShoulderView": return "Should enable a more enhanced on shoulder behindview.";
	}
	return Super.GetDescriptionText(PropName);
}

defaultproperties
{
	FriendlyName="Server Veterancy Handler V6"
	Description="Use perks as privately on this server config instead of getting from global steam stats."
	GroupName="KF-Stats"
	VersionNumber=600
	Perks(0)="ServerPerksP.SRVetSupportSpec"
	Perks(1)="ServerPerksP.SRVetBerserker"
	Perks(2)="ServerPerksP.SRVetCommando"
	Perks(3)="ServerPerksP.SRVetFieldMedic"
	Perks(4)="ServerPerksP.SRVetFirebug"
	Perks(5)="ServerPerksP.SRVetSharpshooter"
	Perks(6)="ServerPerksP.SRVetDemolitions"
	MinPerksLevel=-1
	MaxPerksLevel=6
	RequirementScaling=1
	ServerPerksGroup="Perks"
	RemotePort=5000
	RemoteDatabaseURL="192.168.1.33"
	RemotePassword="Pass"
	bUseEnhancedScoreboard=true
	bEnableChatIcons=true
	bEnhancedShoulderView=true

	TraderInventory(0)="4:KFMod.MP7MPickup"
	TraderInventory(1)="2:KFMod.ShotgunPickup"
	TraderInventory(2)="2:KFMod.BoomStickPickup"
	TraderInventory(3)="5:KFMod.LAWPickup"
	TraderInventory(4)="2:KFMod.AA12Pickup"
	TraderInventory(5)="1:KFMod.SinglePickup"
	TraderInventory(6)="1:KFMod.DualiesPickup"
	TraderInventory(7)="1:KFMod.DeaglePickup"
	TraderInventory(8)="1:KFMod.DualDeaglePickup"
	TraderInventory(9)="3:KFMod.WinchesterPickup"
	TraderInventory(10)="3:KFMod.CrossbowPickup"
	TraderInventory(11)="3:KFMod.M14EBRPickup"
	TraderInventory(12)="4:KFMod.BullpupPickup"
	TraderInventory(13)="4:KFMod.AK47Pickup"
	TraderInventory(14)="4:KFMod.SCARMK17Pickup"
	TraderInventory(15)="0:KFMod.KnifePickup"
	TraderInventory(16)="0:KFMod.MachetePickup"
	TraderInventory(17)="0:KFMod.AxePickup"
	TraderInventory(18)="0:KFMod.ChainsawPickup"
	TraderInventory(19)="0:KFMod.KatanaPickup"
	TraderInventory(20)="6:KFMod.FlameThrowerPickup"
	TraderInventory(21)="5:KFMod.PipeBombPickup"
	TraderInventory(22)="5:KFMod.M79Pickup"
	TraderInventory(23)="5:KFMod.M32Pickup"
	TraderInventory(24)="4:KFMod.MAC10Pickup"
	TraderInventory(25)="4:KFMod.MP5MPickup"
	TraderInventory(26)="2:KFMod.BenelliPickup"
	TraderInventory(27)="1:KFMod.Magnum44Pickup"
	TraderInventory(28)="1:KFMod.Dual44MagnumPickup"
	TraderInventory(29)="4:KFMod.M4Pickup"
	TraderInventory(30)="0:KFMod.ClaymoreSwordPickup"
	TraderInventory(31)="6:KFMod.HuskGunPickup"
	TraderInventory(32)="4:KFMod.M4203Pickup"
	TraderInventory(33)="4:KFMod.M7A3MPickup"
	TraderInventory(34)="2:KFMod.KSGPickup"
	TraderInventory(35)="1:KFMod.MK23Pickup"
	TraderInventory(36)="1:KFMod.DualMK23Pickup"
	TraderInventory(37)="4:KFMod.FNFAL_ACOG_Pickup"

	WeaponCategories(0)="Melee"
	WeaponCategories(1)="Pistol"
	WeaponCategories(2)="Shotgun"
	WeaponCategories(3)="Sniper"
	WeaponCategories(4)="Machine Gun"
	WeaponCategories(5)="Explosive"
	WeaponCategories(6)="Flame Thrower"
	
	SmileyTags(0)=(IconTag=">:(",IconTexture="UnlimaginMod.I_Mad")
	SmileyTags(1)=(IconTag=":(",IconTexture="UnlimaginMod.I_Frown")
	SmileyTags(2)=(IconTag=":)",IconTexture="UnlimaginMod.I_GreenLickB")
	SmileyTags(3)=(IconTag=":P",IconTexture="UnlimaginMod.I_Tongue",bCaseInsensitive=true)
	SmileyTags(4)=(IconTag=":d",IconTexture="UnlimaginMod.I_GreenLick")
	SmileyTags(5)=(IconTag=":D",IconTexture="UnlimaginMod.I_BigGrin")
	SmileyTags(6)=(IconTag=":|",IconTexture="UnlimaginMod.I_Indiffe")
	SmileyTags(7)=(IconTag=":/",IconTexture="UnlimaginMod.I_Ohwell")
	SmileyTags(8)=(IconTag=":*",IconTexture="UnlimaginMod.I_RedFace")
	SmileyTags(9)=(IconTag=":-*",IconTexture="UnlimaginMod.I_RedFace")
	SmileyTags(10)=(IconTag="Ban?",IconTexture="UnlimaginMod.I_Ban",bCaseInsensitive=true)
	SmileyTags(11)=(IconTag="B)",IconTexture="UnlimaginMod.I_Cool")
	SmileyTags(12)=(IconTag="Hmm",IconTexture="UnlimaginMod.I_Hmm")
	SmileyTags(13)=(IconTag="XD",IconTexture="UnlimaginMod.I_Scream")
	SmileyTags(14)=(IconTag="SPAM",IconTexture="UnlimaginMod.I_Spam")
	
	//[block] ServerPackages
	ModServerPackages(0)="UnlimaginMod_Snd.uax"
	//ModServerPackages(1)="UnlimaginMod_SM.usx"
	//ModServerPackages(2)="UnlimaginMod_SM.usx"
	//ModServerPackages(3)="UnlimaginMod_SM.usx"
	//Whisky_ColtM1911
	ModServerPackages(4)="IJCWeaponPackSoundsW2.uax"
	ModServerPackages(5)="UM_WM1911Pistol_A.ukx"
	ModServerPackages(6)="WM1911Pistol_SM.usx"
	ModServerPackages(7)="WM1911Pistol_T.utx"
	//OperationY_G2Contender
	ModServerPackages(8)="Thompson_G2_A.ukx"
	//Maria_Cz75Laser
	ModServerPackages(9)="Cz75Laser_A.ukx"
	ModServerPackages(10)="Cz75Laser_SM.usx"
	ModServerPackages(11)="Cz75Laser_T.utx"
	//ZedekPD_MR96Revolver
	ModServerPackages(12)="MR96_A.ukx"
	ModServerPackages(13)="MR96_S.uax"
	ModServerPackages(14)="MR96_SM.usx"
	ModServerPackages(15)="MR96_T.utx"
	//Maria_M37Ithaca
	ModServerPackages(16)="FMX_Ithaca_A.ukx"
	ModServerPackages(17)="FMX_Ithaca_Snd.uax"
	ModServerPackages(18)="FMX_Ithaca_SM.usx"
	ModServerPackages(19)="FMX_Ithaca_T.utx"
	//Hemi_Braindead_Moss12
	ModServerPackages(20)="KF_Moss123rdAnims.ukx"
	ModServerPackages(21)="KF_Moss12Anims.ukx"
	ModServerPackages(22)="KF_Moss12Snd.uax"
	ModServerPackages(23)="KF_Moss12_pickups.usx"
	ModServerPackages(24)="KF_Moss123rd.usx"
	ModServerPackages(25)="KF_Moss12.utx"
	//OperationY_Protecta
	ModServerPackages(26)="Protecta_A.ukx"
	//MrQuebec_HekuT_Spas12
	ModServerPackages(27)="Spas_A.ukx"
	ModServerPackages(28)="Spas_SM.usx"
	ModServerPackages(29)="Spas_T.utx"
	//Braindead_HuntingRifle
	ModServerPackages(30)="HuntingRifleA.ukx"
	ModServerPackages(31)="HuntingRifle_Snd.uax"
	ModServerPackages(32)="HuntingRifleS.usx"
	ModServerPackages(33)="HuntingRifleT.utx"
	//OperationY_SVDLLI
	ModServerPackages(34)="SVDLLI_A.ukx"
	//OperationY_V94
	ModServerPackages(35)="B94_A.ukx"
	ModServerPackages(36)="B94_SN.uax"
	ModServerPackages(37)="B94_SM.usx"
	ModServerPackages(38)="B94_T.utx"
	//OperationY_HK417
	ModServerPackages(39)="HK417_A.ukx"
	//OperationY_VSSDT
	ModServerPackages(40)="VSSDT_v2_A.ukx"
	//OperationY_M82A1LLI
	ModServerPackages(41)="M82A1LLI_A.ukx"
	//OperationY_L96AWPLLI
	ModServerPackages(42)="L96AWPLLI_A.ukx"
	//FluX_G36C
	ModServerPackages(43)="FX-G36C_v2_A.ukx"
	ModServerPackages(44)="FX-G36C_v2_Snd.uax"
	ModServerPackages(45)="FX-G36C_SM.usx"
	ModServerPackages(46)="FX-G36C_T.utx"
	//Maria_M16A4
	ModServerPackages(47)="M16A4Rifle_A.ukx"
	ModServerPackages(48)="M16A4Rifle_SM.usx"
	ModServerPackages(49)="M16A4Rifle_T.utx"
	//JSullivan_L85A2
	ModServerPackages(50)="JS_L85A2_3rd.ukx"
	ModServerPackages(51)="JS_L85A2_A.ukx"
	ModServerPackages(52)="JS_L85A2_M.usx"
	ModServerPackages(53)="JS_L85A2_T.utx"
	//Braindead_MP5Pack
	ModServerPackages(54)="BD_FL_MP5_A.ukx"
	ModServerPackages(55)="BD_MP5SD_S.uax"
	ModServerPackages(56)="BD_MP5_SM.usx"
	ModServerPackages(57)="BD_MP5_FL_T.utx"
	//Exod_BlueStahli_XMV850
	ModServerPackages(58)="XMV850_A.ukx"
	ModServerPackages(59)="XMV850_Snd.uax"
	//ModServerPackages(60)="XMV850S.uax"	//Not in use
	ModServerPackages(61)="XMV850_SM.usx"
	ModServerPackages(62)="XMV850_T.utx"
	//Exod_PooSH_StingerMinigun
	ModServerPackages(63)="Stinger_A.ukx"
	ModServerPackages(64)="Stinger_Snd.uax"
	ModServerPackages(65)="Stinger_SM.usx"
	ModServerPackages(66)="Stinger_T.utx"
	//ZedekPD_Type19
	ModServerPackages(67)="Type19_A.ukx"
	ModServerPackages(68)="Type19_S.uax"
	ModServerPackages(69)="Type19_SM.usx"
	ModServerPackages(70)="Type19_T.utx"
	//ZedekPD_XM8
	ModServerPackages(71)="XM8_A.ukx"
	ModServerPackages(72)="XM8_Snd.uax"
	ModServerPackages(73)="XM8_SM.usx"
	ModServerPackages(74)="XM8_3rd_T.utx"
	ModServerPackages(75)="XM8_T.utx"
	//OperationY_UMP45
	ModServerPackages(76)="UMP45_A.ukx"
	ModServerPackages(77)="UMP45_Snd.uax"
	ModServerPackages(78)="UMP45_sm.usx"
	ModServerPackages(79)="UMP45_T.utx"
	//OperationY_PKM
	ModServerPackages(80)="Pkm_A.ukx"
	ModServerPackages(81)="PKM_SN.uax"
	ModServerPackages(82)="Pkm_SM.usx"
	ModServerPackages(83)="Pkm_T.utx"
	//OperationY_UMP45EOTech
	ModServerPackages(84)="UMP45LLI_A.ukx"
	//OperationY_VALDT
	ModServerPackages(85)="VALDT_v2_A.ukx"
	//ZedekPD_Brownings
	ModServerPackages(86)="Browning_A.ukx"
	ModServerPackages(87)="Browning_S.uax"
	ModServerPackages(88)="Browning_SM.usx"
	ModServerPackages(89)="Browning_T.utx"
	//OperationY_AUG_A1AssaultRifle
	ModServerPackages(90)="AUG_A1_A.ukx"
	//Whisky_Hammer
	ModServerPackages(91)="whisky_hammer_A.ukx"
	ModServerPackages(92)="WHammer_SM.usx"
	ModServerPackages(93)="whisky_hammer_T.utx"
	//
	//ModServerPackages()=""
	//[end]
}